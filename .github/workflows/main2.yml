name: CI pipeline

on:
  push:
    branches: ['main']

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ci/${{ github.job }}
      BUILD_CACHE: /home/runner/.docker/buildkit
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ${{ env.BUILD_CACHE }}
          key: ${{ hashFiles('Dockerfile') }}

      - name: Install the latest buildkit release
        run: |
          BUILDKIT_URL="$(curl -sL https://api.github.com/repos/moby/buildkit/releases \
            | jq -r 'map(select((.name|startswith("v")) and (.name|contains("rc")|not)))|sort_by(.published_at)[-1].assets[]|select(.name|endswith(".linux-amd64.tar.gz")).browser_download_url')"
          curl -L "${BUILDKIT_URL}" | sudo tar -xz -C /usr/local
      - name: Start buildkit daemon
        run: |
          sudo --non-interactive --shell <<END_SUDO
            install -d -m 0750 -o root -g docker /run/buildkit
            buildkitd &
            while ! test -S /run/buildkit/buildkitd.sock; do sleep 0.1; done
            chgrp docker /run/buildkit/buildkitd.sock
          END_SUDO
      - name: Build and Push Docker image
        run: |
            # Build the Docker image
            buildctl build \
              --frontend=dockerfile.v0 --local dockerfile=. --local context=. \
              --export-cache type=local,dest=${BUILD_CACHE},mode=max \
              --import-cache type=local,src=${BUILD_CACHE} \
              --output type=docker,name=${DOCKER_IMAGE} | docker load
        
            # Tag the built image with the target repository
            docker tag ${DOCKER_IMAGE} lelouch17/node-app:${{ github.sha }}
        
            # Log in to Docker Hub and push the image
            echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
            docker push lelouch17/node-app:${{ github.sha }}
        env:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        